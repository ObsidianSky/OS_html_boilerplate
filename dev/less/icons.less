/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@contract-name: 'contract';
@contract-x: 0px;
@contract-y: 0px;
@contract-offset-x: 0px;
@contract-offset-y: 0px;
@contract-width: 49px;
@contract-height: 48px;
@contract-total-width: 56px;
@contract-total-height: 157px;
@contract-image: 'sprite.png';
@contract: 0px 0px 0px 0px 49px 48px 56px 157px 'sprite.png' 'contract';
@docs-name: 'docs';
@docs-x: 0px;
@docs-y: 97px;
@docs-offset-x: 0px;
@docs-offset-y: -97px;
@docs-width: 50px;
@docs-height: 60px;
@docs-total-width: 56px;
@docs-total-height: 157px;
@docs-image: 'sprite.png';
@docs: 0px 97px 0px -97px 50px 60px 56px 157px 'sprite.png' 'docs';
@ekonom-name: 'ekonom';
@ekonom-x: 0px;
@ekonom-y: 48px;
@ekonom-offset-x: 0px;
@ekonom-offset-y: -48px;
@ekonom-width: 56px;
@ekonom-height: 49px;
@ekonom-total-width: 56px;
@ekonom-total-height: 157px;
@ekonom-image: 'sprite.png';
@ekonom: 0px 48px 0px -48px 56px 49px 56px 157px 'sprite.png' 'ekonom';
@spritesheet-width: 56px;
@spritesheet-height: 157px;
@spritesheet-image: 'sprite.png';
@spritesheet-sprites: @contract @docs @ekonom;
@spritesheet: 56px 157px 'sprite.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
